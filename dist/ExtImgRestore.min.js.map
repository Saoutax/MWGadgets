{"version":3,"file":"ExtImgRestore.min.js","mappings":"mBAAAA,EAAE,WACD,IACyC,IAAxCC,GAAGC,OAAOC,IAAI,uBACb,CAAC,SAAU,QAAQC,SAASH,GAAGC,OAAOC,IAAI,cAC3CH,EAAE,kBAAkBK,OACnB,CACD,IAAMC,EAAQL,GAAGC,OAAOC,IAAI,cAAcI,QAAQ,KAAM,MACxD,IAAIN,GAAGO,KAAMC,KAAK,CACjBC,OAAQ,QACRC,KAAM,YACNC,OAAQ,UACRC,OAAQP,EACRQ,cAAe,IACbC,KAAK,SAAAC,GAAQ,IAAAC,EAETC,GAAwB,QAAdD,EADHD,EAAKG,MAAMC,MAAM,GACTC,iBAAS,IAAAJ,GAAK,QAALA,EAAdA,EAAiB,UAAE,IAAAA,OAAA,EAAnBA,EAAqBC,UAAW,GAEhDlB,EAAE,kBAAkBsB,UAAUC,QAAQ,SAACC,EAAKC,GAAU,IAAAC,EAC/CC,EAAQ3B,EAAEwB,GACVI,EAAMD,EAAME,KAAK,kBAEjBC,EAAW,IAAIC,OAAO,qBAADC,OAAqBJ,EAAIrB,QAAQ,sBAAuB,QAAO,eAAc,MAElG0B,EAA4B,QAAjBP,EADDQ,MAAMC,KAAKjB,EAAQkB,SAASN,IAChBL,UAAM,IAAAC,OAAA,EAAdA,EAAiB,GAEjCW,EAAY,GACZC,EAAgB,GACpB,GAAIL,EAAa,CAChB,IAAMM,EAAaN,EAAYO,MAAM,2BACrCH,GAAYE,aAAU,EAAVA,EAAa,KAAM,GAE/B,IAAME,EAAaR,EAAYO,MAAM,2BACrCF,GAAgBG,aAAU,EAAVA,EAAa,KAAM,EACpC,CAEA,IAAMC,EAAM,IAAIC,MAChBD,EAAIE,OAAS,WACRP,IAAWK,EAAIG,MAAMC,QAAUT,GACnCK,EAAIpC,MAAQgC,EAAgB,kBAAHN,OAAqBM,GAAkB,gBAChEX,EAAMoB,YAAYL,EACnB,EACAA,EAAId,IAAMA,EACVc,EAAIM,IAAMpB,CACX,EACD,EACD,CACD,E","sources":["webpack://mwgadgets/./src/ExtImgRestore/index.js"],"sourcesContent":["$(() => {\n\tif (\n\t\tmw.config.get(\"wgNamespaceNumber\") !== -1 &&\n\t\t![\"submit\", \"edit\"].includes(mw.config.get(\"wgAction\")) &&\n\t\t$(\".moe-img-error\").length\n\t) {\n\t\tconst title = mw.config.get(\"wgPageName\").replace(/_/g, \" \");\n\t\tnew mw.Api().post({\n\t\t\taction: \"query\",\n\t\t\tprop: \"revisions\",\n\t\t\trvprop: \"content\",\n\t\t\ttitles: title,\n\t\t\tformatversion: 2\n\t\t}).then(data => {\n\t\t\tconst page = data.query.pages[0];\n\t\t\tconst content = page.revisions?.[0]?.content || \"\";\n\n\t\t\t$(\".moe-img-error\").toArray().forEach(($el, index) => {\n\t\t\t\tconst $this = $($el);\n\t\t\t\tconst src = $this.attr(\"data-src-input\");\n\n\t\t\t\tconst imgRegex = new RegExp(`<img[^>]*src=[\"']${src.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")}[\"'][^>]*>`, \"gi\");\n\t\t\t\tconst matches = Array.from(content.matchAll(imgRegex));\n\t\t\t\tconst targetMatch = matches[index]?.[0];\n\n\t\t\t\tlet styleAttr = \"\";\n\t\t\t\tlet originalTitle = \"\";\n\t\t\t\tif (targetMatch) {\n\t\t\t\t\tconst styleMatch = targetMatch.match(/style=[\"']([^\"']+)[\"']/i);\n\t\t\t\t\tstyleAttr = styleMatch?.[1] || \"\";\n\n\t\t\t\t\tconst titleMatch = targetMatch.match(/title=[\"']([^\"']+)[\"']/i);\n\t\t\t\t\toriginalTitle = titleMatch?.[1] || \"\";\n\t\t\t\t}\n\n\t\t\t\tconst img = new Image();\n\t\t\t\timg.onload = () => {\n\t\t\t\t\tif (styleAttr) img.style.cssText = styleAttr;\n\t\t\t\t\timg.title = originalTitle ? `「ExtImgRestore」${originalTitle}` : \"ExtImgRestore\";\n\t\t\t\t\t$this.replaceWith(img);\n\t\t\t\t};\n\t\t\t\timg.src = src;\n\t\t\t\timg.alt = src;\n\t\t\t});\n\t\t});\n\t}\n});\n"],"names":["$","mw","config","get","includes","length","title","replace","Api","post","action","prop","rvprop","titles","formatversion","then","data","_page$revisions","content","query","pages","revisions","toArray","forEach","$el","index","_matches$index","$this","src","attr","imgRegex","RegExp","concat","targetMatch","Array","from","matchAll","styleAttr","originalTitle","styleMatch","match","titleMatch","img","Image","onload","style","cssText","replaceWith","alt"],"sourceRoot":""}