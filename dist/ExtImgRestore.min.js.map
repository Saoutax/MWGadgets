{"version":3,"file":"ExtImgRestore.min.js","mappings":"ivBAAAA,EAAE,WACD,IAA6C,IAAxCC,GAAGC,OAAOC,IAAI,uBAAgCH,EAAE,kBAAkBI,OAAS,GAAKJ,EAAE,oBAAoBI,OAAS,GAAK,CACxH,IAAMC,EAAQJ,GAAGC,OAAOC,IAAI,cAAcG,QAAQ,KAAM,MACxD,IAAIL,GAAGM,KAAMC,KAAK,CACjBC,OAAQ,QACRC,KAAM,YACNC,OAAQ,UACRC,OAAQP,EACRQ,cAAe,IACbC,KAAK,SAACC,GAAS,IAAAC,EAEXC,GAAwB,QAAdD,EADHD,EAAKG,MAAMC,MAAM,GACTC,iBAAS,IAAAJ,GAAK,QAALA,EAAdA,EAAiB,UAAE,IAAAA,OAAA,EAAnBA,EAAqBC,UAAW,GAEhDjB,EAAE,oCAAoCqB,KAAK,SAAUC,GAAO,IAAAC,EACrDC,EAAQxB,EAAEyB,MACVC,EAASF,EAAMG,GAAG,KAClBC,EAAMF,EAASF,EAAMK,KAAK,QAAUL,EAAMK,KAAK,kBAE/CC,EAAW,IAAIC,OAAO,qBAADC,OAAqBJ,EAAItB,QAAQ,sBAAuB,QAAO,eAAc,MAElG2B,GAA4B,QAAdV,EADPW,EAAOjB,EAAQkB,SAASL,IACTR,UAAM,IAAAC,OAAA,EAAdA,EAAiB,KAAM,KAEvCa,EAAY,GAChB,GAAIH,EAAa,CAChB,IAAMI,EAAaJ,EAAYK,MAAM,2BACrCF,GAAYC,aAAU,EAAVA,EAAa,KAAM,EAChC,CAEA,IAAME,EAAM,IAAIC,MAChBD,EAAIE,OAAS,WAKZ,GAJIL,GACHpC,EAAEyB,MAAMI,KAAK,QAASO,GAGnBV,EAAQ,CACX,IAAMgB,EAAO1C,EAAE,OAAO6B,KAAK,CAC1Bc,KAAMf,EACNgB,OAAQpB,EAAMK,KAAK,WAAa,SAChCgB,IAAKrB,EAAMK,KAAK,QAAU,sBAC1BiB,MAAOtB,EAAMK,KAAK,UAAY,GAC9BxB,MAAOmB,EAAMK,KAAK,UAAY,KAC5BkB,OAAOtB,MACVD,EAAMwB,YAAYN,EACnB,MACClB,EAAMwB,YAAYvB,KAEpB,EACAc,EAAIX,IAAMA,EACVW,EAAIU,IAAMrB,CACX,EACD,EACD,CACD,E","sources":["webpack://mwgadgets/./src/ExtImgRestore/index.js"],"sourcesContent":["$(() => {\n\tif ( mw.config.get(\"wgNamespaceNumber\") !== -1 && ($(\".moe-img-error\").length > 0 || $(\".moe-img-blocked\").length > 0) ) {\n\t\tconst title = mw.config.get(\"wgPageName\").replace(/_/g, \" \");\n\t\tnew mw.Api().post({\n\t\t\taction: \"query\",\n\t\t\tprop: \"revisions\",\n\t\t\trvprop: \"content\",\n\t\t\ttitles: title,\n\t\t\tformatversion: 2\n\t\t}).then((data) => {\n\t\t\tconst page = data.query.pages[0];\n\t\t\tconst content = page.revisions?.[0]?.content || \"\";\n\n\t\t\t$(\".moe-img-error, .moe-img-blocked\").each(function (index) {\n\t\t\t\tconst $this = $(this);\n\t\t\t\tconst isLink = $this.is(\"a\");\n\t\t\t\tconst src = isLink ? $this.attr(\"href\") : $this.attr(\"data-src-input\");\n\n\t\t\t\tconst imgRegex = new RegExp(`<img[^>]*src=[\"']${src.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")}[\"'][^>]*>`, \"gi\");\n\t\t\t\tconst matches = [...content.matchAll(imgRegex)];\n\t\t\t\tconst targetMatch = matches[index]?.[0] || null;\n\n\t\t\t\tlet styleAttr = \"\";\n\t\t\t\tif (targetMatch) {\n\t\t\t\t\tconst styleMatch = targetMatch.match(/style=[\"']([^\"']+)[\"']/i);\n\t\t\t\t\tstyleAttr = styleMatch?.[1] || \"\";\n\t\t\t\t}\n\n\t\t\t\tconst img = new Image();\n\t\t\t\timg.onload = function () {\n\t\t\t\t\tif (styleAttr) {\n\t\t\t\t\t\t$(this).attr(\"style\", styleAttr);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isLink) {\n\t\t\t\t\t\tconst link = $(\"<a>\").attr({\n\t\t\t\t\t\t\thref: src,\n\t\t\t\t\t\t\ttarget: $this.attr(\"target\") || \"_blank\",\n\t\t\t\t\t\t\trel: $this.attr(\"rel\") || \"noopener noreferrer\",\n\t\t\t\t\t\t\tclass: $this.attr(\"class\") || \"\",\n\t\t\t\t\t\t\ttitle: $this.attr(\"title\") || \"\"\n\t\t\t\t\t\t}).append(this);\n\t\t\t\t\t\t$this.replaceWith(link);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$this.replaceWith(this);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\timg.src = src;\n\t\t\t\timg.alt = src;\n\t\t\t});\n\t\t});\n\t}\n});\n"],"names":["$","mw","config","get","length","title","replace","Api","post","action","prop","rvprop","titles","formatversion","then","data","_page$revisions","content","query","pages","revisions","each","index","_matches$index","$this","this","isLink","is","src","attr","imgRegex","RegExp","concat","targetMatch","_toConsumableArray","matchAll","styleAttr","styleMatch","match","img","Image","onload","link","href","target","rel","class","append","replaceWith","alt"],"sourceRoot":""}